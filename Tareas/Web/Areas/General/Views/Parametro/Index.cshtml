@model Info.Parametro_Info

@{

    if (ViewBag.mensaje != null)
    {

        <div class="alert alert-warning alert-dismissible">
            <h4>
                <i class="icon fa fa-warning"></i> @ViewBag.mensaje
            </h4>
        </div>

    }
    ViewBag.Title = "Parámetros";
    //if (Session["IdUsuario"] == null )
    //{
    //    Response.Redirect("~/Account/Login");
    //}
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/ValidacionBotonSubmit.js"></script>


@using (Html.BeginForm("Index", "Parametro", FormMethod.Post, new { @class = "form", @role = "form" }))
{



    <div class="row">
        <div class="col-md-6">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Correo*</label>
                    @Html.TextBoxFor(v => v.CorreoCuenta, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CorreoCuenta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Clave*</label>
                    @Html.TextBoxFor(v => v.CorreoClave, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CorreoClave, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Puerto*</label>
                    @Html.TextBoxFor(v => v.Puerto, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Puerto, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Host*</label>
                    @Html.TextBoxFor(v => v.Host, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Host, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="TareaConcurrente"></label>
                        @Html.DevExpress().CheckBoxFor(q => q.PermitirSSL, settings =>
                   {
                       settings.Name = "PermitirSSL";
                       settings.Text = "Permite SSL";
                   }).GetHtml()
                        @Html.ValidationMessageFor(q => q.PermitirSSL, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>


        </div>

        <div class="col-md-6">

            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Usuario FTP*</label>
                    @Html.TextBoxFor(v => v.FtpUsuario, new { @class = "form-control", @row = 2 })
                    @Html.ValidationMessageFor(m => m.FtpUsuario, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Clave FTP*</label>
                    @Html.TextBoxFor(v => v.FtpClave, new { @class = "form-control", @row = 2 })
                    @Html.ValidationMessageFor(m => m.FtpClave, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Url formato*</label>
                    @Html.TextBoxFor(v => v.FtpURLArchivo, new { @class = "form-control", @row = 2 })
                    @Html.ValidationMessageFor(m => m.FtpURLArchivo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdUsuario">Url adjuntos*</label>
                    @Html.TextBoxFor(v => v.FtpURLAdjunto, new { @class = "form-control", @row = 2 })
                    @Html.ValidationMessageFor(m => m.FtpURLAdjunto, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdEstadoCierreTarea">Estado tareas cerradas por encargado*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdEstadoCierreTarea, settings =>
               {
                   settings.Name = "IdEstadoCierreTarea";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}]";
                   settings.Properties.Columns.Add("Descripcion", "Estado").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   //Campo ID
                   settings.Properties.ValueField = "IdEstado";
                   settings.Properties.ValueType = typeof(int);
                   settings.Properties.TextField = "Descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lis_estado).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEstadoCierreTarea, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdEstadoCierreTarea">Estado tareas cerradas por solicitante*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdEstadoCierreSolicitante, settings =>
               {
                   settings.Name = "IdEstadoCierreSolicitante";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}]";
                   settings.Properties.Columns.Add("Descripcion", "Estado").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   //Campo ID
                   settings.Properties.ValueField = "IdEstado";
                   settings.Properties.ValueType = typeof(int);
                   settings.Properties.TextField = "Descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lis_estado).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEstadoCierreSolicitante, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="IdEstadoCierreTarea">Estado tareas devuelta*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdEstadoTareaDevuelta, settings =>
               {
                   settings.Name = "IdEstadoTareaDevuelta";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}]";
                   settings.Properties.Columns.Add("Descripcion", "Estado").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   //Campo ID
                   settings.Properties.ValueField = "IdEstado";
                   settings.Properties.ValueType = typeof(int);
                   settings.Properties.TextField = "Descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lis_estado).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEstadoTareaDevuelta, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdEstadoCierreTarea">Estado tareas aprobadas*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdEstadoAprobarTarea, settings =>
               {
                   settings.Name = "IdEstadoAprobarTarea";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}]";
                   settings.Properties.Columns.Add("Descripcion", "Estado").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   //Campo ID
                   settings.Properties.ValueField = "IdEstado";
                   settings.Properties.ValueType = typeof(int);
                   settings.Properties.TextField = "Descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lis_estado).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEstadoAprobarTarea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="IdEstadoCierreTarea">Estado tareas vencidas*</label>
                    @Html.DevExpress().ComboBoxFor(q => q.IdEstadoTareaVencida, settings =>
               {
                   settings.Name = "IdEstadoTareaVencida";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "[{0}]";
                   settings.Properties.Columns.Add("Descripcion", "Estado").Width = System.Web.UI.WebControls.Unit.Percentage(10);
                   //Campo ID
                   settings.Properties.ValueField = "IdEstado";
                   settings.Properties.ValueType = typeof(int);
                   settings.Properties.TextField = "Descripcion";
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;

               }).BindList(ViewBag.lis_estado).GetHtml()
                    @Html.ValidationMessageFor(q => q.IdEstadoTareaVencida, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">

            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdEstadoCierreTarea">Cerrar tarea cada [min]:*</label>
                    @Html.TextBoxFor(v => v.IntervaloEjecucionMin, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.IntervaloEjecucionMin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IntervaloEjecucionMinApro">Aprobar tarea cada [min]:*</label>
                    @Html.TextBoxFor(v => v.IntervaloEjecucionMinApro, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.IntervaloEjecucionMinApro, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="UtilizarFechaAutoApro">Asignar fecha de entrega auto aprobación:</label>
                    @Html.DevExpress().ComboBoxFor(q => q.UtilizarFechaAutoApro, settings =>
               {
                   settings.Name = "UtilizarFechaAutoApro";
                   settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   settings.Properties.DisplayFormatString = "{0}";
                   settings.Properties.Items.Add("MANTENER FECHA DE ENTREGA", "FECHA");
                   settings.Properties.Items.Add("MANTENER INTERVALO ENTRE CREACION - ENTREGA", "INTERVALO");
                   settings.Properties.Items.Add("FECHA ACTUAL", "ACTUAL");
                   settings.Properties.Items.Add("AGREGAR 1 DIA", "1DIA");
                   settings.Properties.Items.Add("AGREGAR 2 DIAS", "2DIA");
                   settings.Properties.Items.Add("AGREGAR 3 DIAS", "3DIA");
                   settings.Properties.ValueType = typeof(string);
                   //Boton para seleccionar ningun registro
                   settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.Never;
                   settings.Properties.NullText = "== Seleccione ==";
                   settings.Properties.DropDownStyle = DropDownStyle.DropDown;
               }).GetHtml()
                    @Html.ValidationMessageFor(q => q.UtilizarFechaAutoApro, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IdEstadoCierreTarea">Alertar tareas antes de caducar [min]:*</label>
                    @Html.TextBoxFor(v => v.IntervaloAlertaMin, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.IntervaloAlertaMin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="IntervaloEjecucionMinApro">Repetir alarma cada [min]:*</label>
                    @Html.TextBoxFor(v => v.IntervaloRepetirAlarma, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.IntervaloRepetirAlarma, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-default" href="@Url.Action("Index","Grupo",new { Area = "General" },null)">Cancelar</a>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}
